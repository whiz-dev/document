##git 로컬에 설치
git --version

##환경설정
git config --global init.defaultBranch main (github 기본 브랜치명 master -> main 변경됨)
git config --global user.name <username>
git config --global user.email <email>
git config --list

##버전관리
git status
git init (로컬 리파지토리 .git 폴더 생성)
git add .
git commit -m <message>
git log
git log --name-only (commit된 파일 목록 보기)
git --no-pager log (페이지 매김을 사용안함. 해당 옵션이 없을 시 q 입력하여 종료)
git reset --hard <commit hash tag> (해당 commit으로 Head를 돌림 + 파일 내용 롤백 + non-modified)
git reset --soft <commit hash tag> (해당 commit으로 Head를 돌림 + 파일 내용 유지 + modified staged)
git reset --mix <commit hash tag> (해당 commit으로 Head를 돌림 + 파일 내용 유지 + modified unstaged)
git revert <commit hash tag> (해당 commit을 롤백 시킴)

##github 가입
github 이메일과 로컬git 이메일은 동일하게 함.

##github 연동
git remote add origin <github 리파지토리 url>

##github 내보내기
git push origin main

##github 가져오기
git clone <github 리파지토리 url>

##github 변경사항 가져오기
git pull origin main
git pull origin main --allow-unrelated-histories (최초 pull 작업 시 원격저장소와 로컬저장소 사이에 commit history가 일치하지 않을 경우)

##불필요 파일 제외
.gitingnore
gitignore.io

##브랜치
git branch (현재 작업 브랜치 확인)
git branch -r (로컬 브랜치 목록)
git branch -a (전체 브랜치 목록)
git branch <브랜치명> (브랜치 생성)
git checkout <브랜치명> (현재 작업 브랜치 변경)
git checkout . (현재 디렉토리의 변경 사항 모두 마지막 commit으로 초기화)
git checkout <폴더명 or 파일명> (해당 폴더 or 파일을 모두 마지막 commit으로 초기화)

PR (pull request)

##Fork



